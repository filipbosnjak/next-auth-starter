generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
  id        String  @id @default(cuid())
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Message {
  id      String  @id @default(cuid())
  subject String?
  text    String?
  from    User?   @relation(name: "MessageFrom", fields: [fromId], references: [id])
  fromId  String?
  to      User?   @relation(name: "MessageTo", fields: [toId], references: [id])
  toId    String?
  isRead  Boolean @default(false)
  createdAt DateTime  @default(now()) @map(name: "created_at")
}

model User {
  id        String    @id @default(cuid())
  username  String?   @unique
  email     String?   @unique
  password  String?
  domain    String?
  role      String?
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  posts     Post[]
  messagesFrom Message[] @relation(name: "MessageFrom") // Use a different relation name
  messagesTo Message[] @relation(name: "MessageTo")     // Use a different relation name

  @@map(name: "users")
}
